version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: rustflix-postgres
    environment:
      POSTGRES_DB: rustflix
      POSTGRES_USER: rustflix
      POSTGRES_PASSWORD: rustflix_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./crates/rustflix-database/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rustflix -d rustflix"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rustflix-network

  redis:
    image: redis:7-alpine
    container_name: rustflix-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rustflix-network

  rustflix-backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: rustflix-backend
    environment:
      DATABASE_URL: postgresql://rustflix:rustflix_password@postgres:5432/rustflix
      REDIS_URL: redis://redis:6379
      RUSTFLIX_CONFIG: /app/config/production.toml
      RUST_LOG: info
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    ports:
      - "8080:8080"
    volumes:
      - ./config:/app/config
      - ./media:/app/media
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - rustflix-network
    restart: unless-stopped

  rustflix-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rustflix-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080
    ports:
      - "3000:3000"
    depends_on:
      - rustflix-backend
    networks:
      - rustflix-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  rustflix-network:
    driver: bridge
